import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

df=pd.read_csv('~/Downloads/energydata_complete.csv')
import sklearn

df_new = df.drop(columns=['lights','date'])
scaler = MinMaxScaler()

df_new_normalised = pd.DataFrame(scaler.fit_transform(df_new), columns=df_new.columns)
lm = LinearRegression()
X = df_new_normalised[['T2']]
Y = df_new_normalised['T6']
lm.fit(X,Y)
lm.score(X,Y)
x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=1)
linear_model = LinearRegression()
linear_model.fit(x_train, y_train)
predicted_values = linear_model.predict(x_test)
from sklearn.metrics import mean_absolute_error
mae = mean_absolute_error(y_test, predicted_values)
round(mae, 3)
linear_model = LinearRegression()
#fit the model to the training dataset
linear_model.fit(x_train, y_train)
#obtain predictions
predicted_values = linear_model.predict(x_test)
#MAE
from sklearn.metrics import mean_absolute_error
mae = mean_absolute_error(y_test, predicted_values)
round(mae, 3)
rss = np.sum(np.square(y_test - predicted_values))
round(rss, 3)
from sklearn.metrics import mean_squared_error
rmse = np.sqrt(mean_squared_error(y_test, predicted_values))
round(rmse, 3)
linear_model.coef_
from sklearn.linear_model import Ridge
ridge_reg = Ridge(alpha=0.4)
ridge_reg.fit(x_train, y_train)
from sklearn.linear_model import Lasso
lasso_reg = Lasso(alpha=0.001)
lasso_reg.fit(x_train, y_train)
def get_weights_df(model, feat, col_name):
   weights = pd.Series(model.coef_, feat.columns).sort_values()
   weights_df = pd.DataFrame(weights).reset_index()
   weights_df.columns = ['X', col_name]
   weights_df[col_name].round(3)
   return weights_df

linear_model_weights = get_weights_df(linear_model, x_train, 'Linear_Model_Weight')
ridge_weights_df = get_weights_df(ridge_reg, x_train, 'Ridge_Weight')
lasso_weights_df = get_weights_df(lasso_reg, x_train, 'Lasso_weight')
final_weights = pd.merge(linear_model_weights, ridge_weights_df, on='X')
final_weights = pd.merge(final_weights, lasso_weights_df, on='X')
final_weights
predicted_values_lasso = lasso_reg.predict(x_test)
rmse = np.sqrt(mean_squared_error(y_test,predicted_values_lasso ))
round(rmse, 3)
